
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(LLVM_BUILD_TYPE "Debug")
    set(LLVM_ASSERTION_ON "ON")
else()
    set(LLVM_BUILD_TYPE "Release")
    set(LLVM_ASSERTION_ON "OFF")
endif()

if(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build)
    file(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build)
endif()

execute_process(COMMAND ${CMAKE_COMMAND} -G ${CMAKE_GENERATOR} ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/llvm
    -DLLVM_ENABLE_PROJECTS=mlir
    -DLLVM_INCLUDE_TESTS=OFF
    -DLLVM_INCLUDE_RUNTIMES=OFF
    -DLLVM_INCLUDE_BENCHMARKS=OFF 
    -DLLVM_INCLUDE_DOCS=OFF 
    -DLLVM_ENABLE_ZLIB=OFF
    -DLLVM_ENABLE_LIBPFM=OFF
    -DLLVM_INCLUDE_EXAMPLES=OFF
    -DLLVM_BUILD_RUNTIMES=OFF 
    -DLLVM_BUILD_TOOLS=OFF
    -DLLVM_BUILD_UTILS=ON
    -DLLVM_ENABLE_BINDINGS=OFF
    -DLLVM_ENABLE_TERMINFO=OFF
    -DLLVM_ENABLE_LIBXML2=OFF
    -DLLVM_ENABLE_CRASH_OVERRIDES=OFF
    -DLLVM_ENABLE_RTTI=ON
    -DLLVM_ENABLE_EH=ON
    -DLLVM_ENABLE_WARNINGS=OFF
    -DLLVM_TARGETS_TO_BUILD=
    -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=SPIRV
    -DLLVM_ENABLE_BACKTRACES=OFF
    -DLLVM_ENABLE_ASSERTIONS=${LLVM_ASSERTION_ON}
    -DLLVM_ENABLE_OCAMLDOC=OFF
    -DLLVM_BUILD_INSTRUMENTED_COVERAGE=OFF
    -DLLVM_ENABLE_TERMINFO=OFF
    -DLLVM_ENABLE_IDE=ON
    -DMLIR_ENABLE_EXECUTION_ENGINE=OFF
    -DMLIR_ENABLE_BINDINGS_PYTHON=OFF
    -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build
)

execute_process(COMMAND ${CMAKE_COMMAND} --build . --target install --config Release --parallel WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build)
execute_process(COMMAND ${CMAKE_COMMAND} --build . --target install --config Debug --parallel WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ext/llvm-project/build)

